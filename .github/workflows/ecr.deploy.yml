name: Deploy to Amazon ECR

env:
  aws_region: eu-central-1
  ecr_repository: ${{ github.event.repository.name }}
  dockerfile: "Dockerfile"

on:
  pull_request:
    branches:
      - deploy
    types: [closed]

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    name: Upload image to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.aws_region }}

      - name: Login to Amazon ECR
        id: login_to_ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login_to_ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ecr_repository }}
          IMAGE_TAG: "${{ github.sha }}"
          DOCKERFILE: ${{ env.dockerfile }}
        run: |
          # Build a docker container and push it to ECR
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f $DOCKERFILE .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          
          # Retag this as the production tag to deploy it
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:production
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:production
